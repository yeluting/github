<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.springmvcGithub.dao.CommitCommentMapper">
  <resultMap id="BaseResultMap" type="cn.springmvcGithub.model.CommitComment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="commit_id" jdbcType="INTEGER" property="commitId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="body" jdbcType="VARCHAR" property="body" />
    <result column="line" jdbcType="INTEGER" property="line" />
    <result column="position" jdbcType="INTEGER" property="position" />
    <result column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
  </resultMap>
  <sql id="Base_Column_List">
    id, commit_id, user_id, body, line, position, comment_id, created_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from commit_comments
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from commit_comments
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.springmvcGithub.model.CommitComment">
    insert into commit_comments (id, commit_id, user_id, 
      body, line, position, 
      comment_id, created_at)
    values (#{id,jdbcType=INTEGER}, #{commitId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{body,jdbcType=VARCHAR}, #{line,jdbcType=INTEGER}, #{position,jdbcType=INTEGER}, 
      #{commentId,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.springmvcGithub.model.CommitComment">
    insert into commit_comments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="commitId != null">
        commit_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="body != null">
        body,
      </if>
      <if test="line != null">
        line,
      </if>
      <if test="position != null">
        position,
      </if>
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="commitId != null">
        #{commitId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="body != null">
        #{body,jdbcType=VARCHAR},
      </if>
      <if test="line != null">
        #{line,jdbcType=INTEGER},
      </if>
      <if test="position != null">
        #{position,jdbcType=INTEGER},
      </if>
      <if test="commentId != null">
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.springmvcGithub.model.CommitComment">
    update commit_comments
    <set>
      <if test="commitId != null">
        commit_id = #{commitId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="body != null">
        body = #{body,jdbcType=VARCHAR},
      </if>
      <if test="line != null">
        line = #{line,jdbcType=INTEGER},
      </if>
      <if test="position != null">
        position = #{position,jdbcType=INTEGER},
      </if>
      <if test="commentId != null">
        comment_id = #{commentId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.springmvcGithub.model.CommitComment">
    update commit_comments
    set commit_id = #{commitId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      body = #{body,jdbcType=VARCHAR},
      line = #{line,jdbcType=INTEGER},
      position = #{position,jdbcType=INTEGER},
      comment_id = #{commentId,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>