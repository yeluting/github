<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.springmvcGithub.dao.CommitMapper">
  <resultMap id="BaseResultMap" type="cn.springmvcGithub.model.Commit">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sha" jdbcType="VARCHAR" property="sha" />
    <result column="author_id" jdbcType="INTEGER" property="authorId" />
    <result column="committer_id" jdbcType="INTEGER" property="committerId" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
  </resultMap>
  <sql id="Base_Column_List">
    id, sha, author_id, committer_id, project_id, created_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from commits
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from commits
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.springmvcGithub.model.Commit">
    insert into commits (id, sha, author_id, 
      committer_id, project_id, created_at
      )
    values (#{id,jdbcType=INTEGER}, #{sha,jdbcType=VARCHAR}, #{authorId,jdbcType=INTEGER}, 
      #{committerId,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.springmvcGithub.model.Commit">
    insert into commits
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sha != null">
        sha,
      </if>
      <if test="authorId != null">
        author_id,
      </if>
      <if test="committerId != null">
        committer_id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sha != null">
        #{sha,jdbcType=VARCHAR},
      </if>
      <if test="authorId != null">
        #{authorId,jdbcType=INTEGER},
      </if>
      <if test="committerId != null">
        #{committerId,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.springmvcGithub.model.Commit">
    update commits
    <set>
      <if test="sha != null">
        sha = #{sha,jdbcType=VARCHAR},
      </if>
      <if test="authorId != null">
        author_id = #{authorId,jdbcType=INTEGER},
      </if>
      <if test="committerId != null">
        committer_id = #{committerId,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.springmvcGithub.model.Commit">
    update commits
    set sha = #{sha,jdbcType=VARCHAR},
      author_id = #{authorId,jdbcType=INTEGER},
      committer_id = #{committerId,jdbcType=INTEGER},
      project_id = #{projectId,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>